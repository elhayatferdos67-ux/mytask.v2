services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./backend/services/docker/redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  backend:
    image: ghcr.io/suna-ai/suna-backend:latest
    platform: linux/amd64
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend/.env:/app/.env
    env_file:
      - ./backend/.env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_SSL=False
    depends_on:
      redis:
        condition: service_healthy
      worker:
        condition: service_started

  worker:
    image: ghcr.io/suna-ai/suna-backend:latest
    platform: linux/amd64
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: uv run dramatiq --skip-logging --processes 4 --threads 4 run_agent_background
    volumes:
      - ./backend/.env:/app/.env:ro
    env_file:
      - ./backend/.env
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_SSL=False
    depends_on:
      redis:
        condition: service_healthy

  frontend:
    init: true
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/.env.local:/app/.env.local:ro
    depends_on:
      - backend

  code-server:
    image: codercom/code-server:latest
    ports:
      - "8080:8080"
    environment:
      - PASSWORD=suna-code-server
      - SUDO_PASSWORD=suna-code-server
    volumes:
      - code_server_data:/home/coder
      - code_server_config:/home/coder/.config
      - ./backend:/workspace/backend:rw
      - ./frontend:/workspace/frontend:rw
      - ./sdk:/workspace/sdk:rw
      - ./backend/services/code_server/startup.sh:/usr/local/bin/startup.sh:ro
      - ./backend/services/code_server/settings.json:/workspace/backend/services/code_server/settings.json:ro
      - ./backend/services/code_server/extensions.json:/workspace/backend/services/code_server/extensions.json:ro
    entrypoint: ["/usr/local/bin/startup.sh"]
    command: >
      --bind-addr 0.0.0.0:8080
      --auth password
      --disable-telemetry
      --disable-update-check
      /workspace
    restart: unless-stopped

volumes:
  redis_data:
  code_server_data:
  code_server_config:
